name: 'Run tests'

on:
  workflow_call:
    inputs:
      php-version:
        required: false
        default: '8.2'
        type: string
      dokuwiki-branch:
        required: false
        default: 'master'
        type: string

permissions:
  contents: read
  pull-requests: read

jobs:
  testLinux:
    name: PHP ${{ inputs.php-version }} DokuWiki ${{ inputs.dokuwiki-branch }}
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository || github.event_name == 'workflow_dispatch'

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup PHP ${{ inputs.php-version }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ inputs.php-version }}

      - name: Setup problem matchers
        run: |
          echo ::add-matcher::${{ runner.tool_cache }}/php.json
          echo ::add-matcher::${{ runner.tool_cache }}/phpunit.json

      - name: Create DokuWiki Environment for ${{ inputs.dokuwiki-branch }}
        id: dokuwiki-env
        uses: dokuwiki/github-action/.github/actions/dokuenv@main
        with:
          branch: ${{ inputs.dokuwiki-branch }}

      - name: Install Composer Dependencies
        run: |
          cd _test
          composer install --no-progress --no-suggest --no-interaction --prefer-dist --optimize-autoloader --no-scripts          

      - name: Setup PHPUnit
        # old branches
        run: |
          if [ -f _test/fetchphpunit.php ]; then
            php _test/fetchphpunit.php
          fi       

      - name: Run PHPUnit
        run: |
          cd _test
          if [ -f phpunit.phar ]; then
            php phpunit.phar --verbose --stderr --group ${{ steps.dokuwiki-env.outputs.type }}_${{ steps.dokuwiki-env.outputs.base }}
          else
            composer exec -- phpunit --verbose --stderr --group ${{ steps.dokuwiki-env.outputs.type }}_${{ steps.dokuwiki-env.outputs.base }}
          fi
